'use strict';

exports.__esModule = true;
exports.ordTrait = exports.chainTrait = exports.semigroupTrait = exports.setoidTrait = exports.applyTrait = exports.functorTrait = undefined;

var _functorTrait, _applyTrait, _setoidTrait, _semigroupTrait, _chainTrait, _ordTrait;

var _ramda = /*#__PURE__*/require('ramda');

var _index = /*#__PURE__*/require('../index');

var _util = /*#__PURE__*/require('./util');

var _mapping = /*#__PURE__*/require('./mapping');

var _mapping2 = /*#__PURE__*/_interopRequireDefault(_mapping);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var functorTrait = exports.functorTrait = (_functorTrait = {}, _functorTrait[_mapping2.default.map] = function (fn) {
  return this.constructor[_mapping2.default.of](fn(this.value));
}, _functorTrait);

var applyTrait = exports.applyTrait = (_applyTrait = {}, _applyTrait[_mapping2.default.ap] = function (applyWithFn) {
  var _this = this;

  return applyWithFn.map(function (fn) {
    return fn(_this.value);
  });
}, _applyTrait);

var setoidTrait = exports.setoidTrait = (_setoidTrait = {}, _setoidTrait[_mapping2.default.equals] = function (setoid) {
  return (0, _util.isSameType)(this, setoid) && (0, _ramda.equals)(this.value, setoid.value);
}, _setoidTrait);

var semigroupTrait = exports.semigroupTrait = (_semigroupTrait = {}, _semigroupTrait[_mapping2.default.concat] = function (semigroup) {
  var concatenatedValue = this.value;

  if ((0, _index.isString)(this.value) || (0, _index.isNumber)(this.value)) {
    concatenatedValue = this.value + semigroup.value;
  } else if ((0, _ramda.pathSatisfies)(_index.isFunction, ['value', _mapping2.default.concat], this)) {
    concatenatedValue = this.value[_mapping2.default.concat](semigroup.value);
  } else if ((0, _ramda.pathSatisfies)(_index.isFunction, ['value', 'concat'], this)) {
    concatenatedValue = this.value.concat(semigroup.value);
  }

  return this.constructor[_mapping2.default.of](concatenatedValue);
}, _semigroupTrait);

var chainTrait = exports.chainTrait = (_chainTrait = {}, _chainTrait[_mapping2.default.chain] = function (fn) {
  var newChain = fn(this.value);

  return (0, _util.isSameType)(this, newChain) ? newChain : this;
}, _chainTrait);

var ordTrait = exports.ordTrait = (_ordTrait = {}, _ordTrait[_mapping2.default.lte] = function (ord) {
  return (0, _util.isSameType)(this, ord) && (this.value < ord.value || this[_mapping2.default.equals](ord));
}, _ordTrait);