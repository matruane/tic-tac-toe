'use strict';

exports.__esModule = true;

var _isObject2 = /*#__PURE__*/require('ramda/src/internal/_isObject');

var _isObject3 = /*#__PURE__*/_interopRequireDefault(_isObject2);

var _ramda = /*#__PURE__*/require('ramda');

var _isNull = /*#__PURE__*/require('./isNull');

var _isNull2 = /*#__PURE__*/_interopRequireDefault(_isNull);

var _isObjLike = /*#__PURE__*/require('./isObjLike');

var _isObjLike2 = /*#__PURE__*/_interopRequireDefault(_isObjLike);

var _isFunction = /*#__PURE__*/require('./isFunction');

var _isFunction2 = /*#__PURE__*/_interopRequireDefault(_isFunction);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var isObjectConstructor = /*#__PURE__*/(0, _ramda.pipe)(_ramda.toString, /*#__PURE__*/(0, _ramda.equals)( /*#__PURE__*/(0, _ramda.toString)(Object)));
var hasObjectConstructor = /*#__PURE__*/(0, _ramda.pathSatisfies)( /*#__PURE__*/(0, _ramda.both)(_isFunction2.default, isObjectConstructor), ['constructor']);

/* eslint-disable max-len */
/**
 * Check to see if an object is a plain object (created using `{}`, `new Object()` or `Object.create(null)`).
 *
 * @func isPlainObj
 * @aliases isPlainObject
 * @memberOf RA
 * @since {@link https://char0n.github.io/ramda-adjunct/0.5.0|v0.5.0}
 * @category Type
 * @sig * -> Boolean
 * @param {*} val The value to test
 * @return {boolean}
 * @see {@link RA.isNotPlainObj|isNotPlainObj}, {@link RA.isObjLike|isObjLike}, {@link RA.isObj|isObj}
 * @example
 *
 * class Bar {
 *   constructor() {
 *     this.prop = 'value';
 *   }
 * }
 *
 * RA.isPlainObj(new Bar()); //=> false
 * RA.isPlainObj({ prop: 'value' }); //=> true
 * RA.isPlainObj(['a', 'b', 'c']); //=> false
 * RA.isPlainObj(Object.create(null); //=> true
 * RA.isPlainObj(new Object()); //=> true
 */
/* eslint-enable max-len */
var isPlainObj = function isPlainObj(val) {
  if (!(0, _isObjLike2.default)(val) || !(0, _isObject3.default)(val)) {
    return false;
  }

  var proto = Object.getPrototypeOf(val);

  if ((0, _isNull2.default)(proto)) {
    return true;
  }

  return hasObjectConstructor(proto);
};

exports.default = isPlainObj;