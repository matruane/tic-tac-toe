'use strict';

exports.__esModule = true;

var _ramda = /*#__PURE__*/require('ramda');

var _isArray = /*#__PURE__*/require('./isArray');

var _isArray2 = /*#__PURE__*/_interopRequireDefault(_isArray);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Checks if input value is a pair.
 *
 * @func isPair
 * @memberOf RA
 * @since {@link https://char0n.github.io/ramda-adjunct/1.19.0|v1.19.0}
 * @category Type
 * @sig * -> Boolean
 * @param {*} val The value to test
 * @return {boolean}
 * @see {@link http://ramdajs.com/docs/#pair|R.pair}, {@link RA.isNotPair|isNotPair}
 * @example
 *
 * RA.isPair([]); // => false
 * RA.isPair([0]); // => false
 * RA.isPair([0, 1]); // => true
 * RA.isPair([0, 1, 2]); // => false
 * RA.isPair({ 0: 0, 1: 1 }); // => false
 * RA.isPair({ foo: 0, bar: 0 }); // => false
 */
var isPair = /*#__PURE__*/(0, _ramda.both)(_isArray2.default, /*#__PURE__*/(0, _ramda.pipe)(_ramda.length, /*#__PURE__*/(0, _ramda.equals)(2)));

exports.default = isPair;